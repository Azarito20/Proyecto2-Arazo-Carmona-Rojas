/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import funciones.Global;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import proyecto2edd.User;
import proyecto2edd.UserList;
import proyecto2edd.UserNodo;

/**
 *
 * @author pjroj
 */
public class VentanaCargar extends javax.swing.JFrame {

    /**
     * Creates new form VentanaInicio
     */
    public VentanaCargar() {
        initComponents();
        setSize(720, 440);
        setResizable(false);
        setTitle("Inicio - Cargar archivos");
        setLocationRelativeTo(null);
        this.repaint();
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        
        Runnable runnable;
        // Crear un hilo que se ejecuta cada segundo
        runnable = new Runnable() {
            @Override
            public void run() {
                while (true) {
                    // Obtener la fecha y hora actuales
                    LocalDateTime now = LocalDateTime.now();

                    // Formatear la fecha y hora con el formatter
                    String time = now.format(formatter);
                    clock.setText(time);
                    // Esperar un segundo
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };

        // Iniciar el hilo
        Thread thread = new Thread(runnable);
        thread.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        Fondo1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        clock = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        select_csv = new javax.swing.JButton();
        Fondo2 = new javax.swing.JPanel();
        nextpage = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Exit.setText("X");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 50, -1));

        Fondo1.setBackground(new java.awt.Color(153, 255, 255));
        Fondo1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel3.setText("Cola de Impresión");
        Fondo1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 220, 40));
        jLabel3.getAccessibleContext().setAccessibleDescription("");

        clock.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        clock.setText("00:00:00");
        Fondo1.add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel7.setText("Hora:");
        Fondo1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        getContentPane().add(Fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 440));

        select_csv.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        select_csv.setText("Cargar archivo de usuarios");
        select_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_csvActionPerformed(evt);
            }
        });
        getContentPane().add(select_csv, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 290, 60));

        Fondo2.setBackground(new java.awt.Color(102, 153, 255));
        Fondo2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nextpage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nextpage.setText("continuar");
        nextpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextpageActionPerformed(evt);
            }
        });
        Fondo2.add(nextpage, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 220, 30));

        getContentPane().add(Fondo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 390, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void nextpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextpageActionPerformed
        //Función para comprobar si se a seleccionado un archivo
        if (FileIsEmpty()){
            //SE MUESTRA UN MENSAJE DE ERROR EN CASO DE QUE NO SE HAYA SELECCIONADO NINGUN ARCHIVO
            JOptionPane.showMessageDialog(null, "Debe seleccionar un archivo primero");
        }else{
            //Cargar la siguiente ventana,VentanaInicio la que posee las acciones del programa
            VentanaInicio menu = new VentanaInicio();
            menu.setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_nextpageActionPerformed

    private void select_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_csvActionPerformed
        //Para cargar el archivo
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".csv", "csv");
        file.setFileFilter(filter);
        file.setAcceptAllFileFilterUsed(false);
        int result = file.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            Global.setFile(file.getSelectedFile());
        JOptionPane.showMessageDialog(null, "Su archivo a sido cargado con exito, haga click en 'CONTINUAR'");
        }
        //CODIGO PARA LEERLO//
        String filePath = Global.getFile().getAbsolutePath();
        UserList userList = new UserList();
        String linea = "";
        String separador = ";";

        try {
            // Crear un objeto BufferedReader para leer el archivo
            BufferedReader br = new BufferedReader(new FileReader(filePath));

            // Leer la primera línea del archivo (encabezado)
            linea = br.readLine();

            // Leer las siguientes líneas del archivo (datos)
            while ((linea = br.readLine()) != null) {
                if (linea.equals("usuario;tipo")){
                    continue;  // Saltamos esta línea para no guardar "usuario;tipo"
                }else{
                // Dividir la línea por el separador y guardar los campos en un arreglo
                String[] campos = linea.split(separador);

                // Crear un objeto User con los campos leídos
                User usuario = new User(campos[0], campos[1],null);

                // Agregar el objeto Usuario a la lista de usuarios
                userList.insertUser(usuario);
                }
            }
            
            Global.setUserlist(userList);
            // Cerrar el objeto BufferedReader
            br.close();

            //userList.print();
            UserNodo pointer = userList.getHead();
            while (pointer != null) {
                System.out.print(" [ " + pointer.getUser().getUsername() + ";" + pointer.getUser().getPriorityType() + ";" + pointer.getUser().getDocuments() +" ] ");
                pointer = pointer.getNext();
                
            }

        } catch (IOException e) {
            // Mostrar por consola el mensaje de la excepción
            System.out.println("Error al leer el archivo: " + e.getMessage());
        }    
    
    }//GEN-LAST:event_select_csvActionPerformed

    private boolean FileIsEmpty(){
        return Global.getFile() == null;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCargar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JPanel Fondo1;
    private javax.swing.JPanel Fondo2;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton nextpage;
    private javax.swing.JButton select_csv;
    // End of variables declaration//GEN-END:variables
}
